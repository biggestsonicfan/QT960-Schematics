TITLE High Speed EPROM Wait State Counter
REVISION B
AUTHOR Brent Bolton
COMPANY Intel Corporation
DATE 2/20/89

;  This device implements the two bit wait state counter for
;  High Speed EPROM. This counter is loaded with two different
;  values. Prior to the start of a bus cycle the counter contains the
;  number of wait states to be inserted into the first data cycle (or
;  in the case of the 82380 in master mode, the only data cycle). One
;  CLK1 prior to the end of the first data cycle the counter is
;  loaded with the number of wait states to be inserted into the burst
;  data cycles. The counter is also reloaded one CLK1 before the end 
;  of the burst data cycles. The output of the counter is decoded to
;  generate ready signals for input to PAL U25. This PAL also drives A3-1
;  when the 82380 is the bus master and generates the DLYADS# signal.
 
CHIP 2U9B PAL16R4
;SPEED 15nS
  
;PINS
;1      2       3       4       5
 CLK2   /PH1    /DEN    HLDA    /CPUADS

;6      7       8       9       10
/DMAADS E1WAIT0 E1WAIT1 EBWAIT  GND

;11     12      13      14      15
OE      NC      NC      ECNT1   ECNT0

;16     17      18      19      20
/ERDY   /DLYADS A3_1    A3      VCC
 
;INPUTS: CLK2           System clock
;        PH1#           Phase 1 of bus clock (overlaps CLK2 edges B and C)
;        DEN#           Combined Data Enable (CPUDEN# + DMADEN#)
;        HLDA           Hold acknowledge from 80960KB. Indicates 82380
;                        master mode when asserted.
;        CPUADS#        80960KB Address and Data Strobe
;        DMAADS#        82380 Address and Data Strobe
;        E1WAIT[0..1]   High Speed EPROM first cycle wait state count
;        EBWAIT         High Speed EPROM burst cycle wait state count
;        A3             Address bus bit 3

;OUTPUTS:ECNT[0..1]     High Speed EPROM wait state counter
;        ERDY#          High speed EPROM ready
;        DLYADS#        CPUADS# delayed by one CLK1
;        A3-1           A3 for High Speed EPROM Bank 1

EQUATIONS

/ECNT1 := E1WAIT1 * /E1WAIT0 * /DEN * /PH1  ;Load and decrement first
                                            ; cycle count at end of Ta.
        + /E1WAIT1 * E1WAIT0 * /DEN * /PH1  ;Load and hold first cycle
                                            ; count at end of Ta.
        + ECNT1 * /ECNT0 * DEN * /PH1       ;Decrement cycle count in Td.
        + /ECNT1 * ECNT0 * DEN * /PH1       ;Hold cycle count in Td.
        + CPUADS * /DEN * /E1WAIT1          ;Load burst cycle count (=0)
                * /E1WAIT0 * /PH1           ; at end of Ta if first cycle
                                            ; is 0 wait states.
        + DEN * /ECNT1 * /ECNT0 * /PH1      ;Load burst cycle count (=0)
                                            ; when ECNT=00 in Td.
        + /ECNT1 * PH1                      ;Hold on C edge.

/ECNT0 := E1WAIT0 * /DEN * /PH1             ;Load and decrement first
                                            ; cycle count at end of Ta.
        + /EBWAIT * CPUADS * /DEN           ;Load burst cycle count at
                * /E1WAIT1 * /E1WAIT0       ; end of Ta if first cycle
                * /PH1                      ; is 0 wait states.
        + /EBWAIT * DEN * /ECNT1 * /ECNT0   ;Load burst cycle count
                * /PH1                      ; when ECNT=00 in Td.
        + ECNT0 * DEN * /PH1                ;Decrement first or burst
                                            ; cycle count in Td.
        + /ECNT0 * PH1                      ;Hold on C edge.

ERDY := /ECNT1 * /ECNT0 * DEN * /PH1        ;Assert when ECNT=00 in Td.
      + /E1WAIT1 * /E1WAIT0 * DMAADS        ;Assert at end of Ta on
                * /DEN * HLDA * /PH1        ; zero wait state DMA
                                            ; bus cycles.
      + /E1WAIT1 * /E1WAIT0 * CPUADS        ;Assert at end of Ta on
                * /DEN * /HLDA * /PH1       ; zero wait state CPU
                                            ; bus cycles.
      + ERDY * PH1                          ;Hold on C edge.

DLYADS := CPUADS * /PH1                     ;Load on A edge.
        + DLYADS * PH1                      ;Hold on C edge.

A3_1.TRST = HLDA                            ;Enable when 82380 is bus
                                            ; master.
/A3_1 = /A3